<!-- This file is part of Openflorian. Copyright (C) 2015 Bastian Kraus Openflorian 
	is free software: you can redistribute it and/or modify it under the terms 
	of the GNU General Public License as published by the Free Software Foundation, 
	either version 3 of the License, or (at your option) any later version. Openflorian 
	is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
	without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
	PURPOSE. See the GNU General Public License for more details. You should 
	have received a copy of the GNU General Public License along with Openflorian. 
	If not, see <http://www.gnu.org/licenses/>. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<organization>
		<name>Open Florian</name>
		<url>http://www.openflorian.de</url>
	</organization>

	<developers>
		<developer>
			<name>Bastian Kraus</name>
			<email>bofh@k-hive.de</email>
		</developer>
	</developers>

	<groupId>de.openflorian</groupId>
	<artifactId>openflorian-server</artifactId>
	<name>Open Florian Server</name>
	<version>${build.version}</version>
	<packaging>war</packaging>

	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/groups/public/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Framework -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servlet.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0.2</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${sl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${sl4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>3.2.0</version>
		</dependency>

		<!-- Vaadin -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addon</groupId>
			<artifactId>v-leaflet</artifactId>
			<version>1.0.0-b6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxb-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-servlet-initializer</artifactId>
			<version>${resteasy.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>${resteasy.version}</version>
		</dependency>

		<!-- CGLIB for Proxying -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib.version}</version>
		</dependency>


		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3}</version>
		</dependency>

		<!-- Reflections -->
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>${reflection.version}</version>
		</dependency>

		<!-- ESAPI -->
		<dependency>
			<groupId>org.owasp.esapi</groupId>
			<artifactId>esapi</artifactId>
			<version>${esapi.version}</version>
		</dependency>

		<!-- Weather API -->
		<dependency>
			<groupId>com.github.fedy2</groupId>
			<artifactId>yahoo-weather-java-api</artifactId>
			<version>${weatherapi.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-simple</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>

		<dependency>
		    <groupId>net.aksingh</groupId>
		    <artifactId>owm-japis</artifactId>
			<version>${openweathermap.version}</version>
		</dependency>

		<!-- Proj4J Geo Transformation -->
		<dependency>
			<groupId>org.osgeo</groupId>
			<artifactId>proj4j</artifactId>
			<version>${proj4j.version}</version>
		</dependency>

		<!-- Super CSV -->
		<dependency>
			<groupId>net.sf.supercsv</groupId>
			<artifactId>super-csv</artifactId>
			<version>${supercsv.version}</version>
		</dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
            <scope>compile</scope>
            <version>${swagger.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
	</dependencies>

	<build>
		<finalName>openflorian-${build.version}</finalName>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${target.jdk.version}</source>
					<target>${target.jdk.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>7.6.4</version>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<webappDirectory>src/main/webapp/VAADIN/widgetsets</webappDirectory>
						</configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile-theme</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Ignore/Execute plugin execution -->
			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<!-- copy-dependency plugin -->
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-dependency-plugin</artifactId>
									<versionRange>[1.0.0,)</versionRange>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>
	        <plugin>
	            <groupId>com.github.kongchen</groupId>
	            <artifactId>swagger-maven-plugin</artifactId>
	            <version>${swagger-maven-plugin.version}</version>
	            <configuration>
	                <apiSources>
	                    <apiSource>
                            <springmvc>false</springmvc>
                            <locations>de.openflorian.ws.api</locations>
                            <schemes>http,https</schemes>
                            <host>of-server</host>
                            <basePath>/openflorian/rest/api</basePath>
                            <info>
                                <title>Openflorian REST API</title>
                                <version>v1</version>
                                <description>The OpenFlorian REST API enables management of the server via REST</description>
                                <termsOfService>
                                    http://bitbucket.org/ceth/openflorian
                                </termsOfService>
                                <contact>
                                    <email>bofh@cpotr.de</email>
                                    <name>Bastian Kraus</name>
                                    <url>http://about.me/bastian.kraus</url>
                                </contact>
                                <license>
                                    <url>hhttp://www.gnu.de/documents/gpl.en.html</url>
                                    <name>GPL v3</name>
                                </license>
                            </info>
                            <templatePath>${basedir}/apidoc/template/strapdown.html.hbs</templatePath>
                            <outputPath>${basedir}/apidoc/generated/api-doc.html</outputPath>
                            <swaggerDirectory>${basedir}/apidoc/generated/swagger-ui</swaggerDirectory>
	                    </apiSource>
	                </apiSources>
	            </configuration>
	        </plugin>
		</plugins>
	</build>

	<properties>
		<!-- General properties -->
		<maven.test.skip>true</maven.test.skip>
		<target.jdk.version>1.8</target.jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<build.version>0.1-DEV</build.version>

		<swagger-maven-plugin.version>3.1.4</swagger-maven-plugin.version>
		<swagger.version>1.5.3</swagger.version>

		<!-- Dependency properties -->
		<junit.version>4.12</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<powermock.version>1.6.2</powermock.version>

		<servlet.version>3.1.0</servlet.version>

		<commons-io>2.4</commons-io>
		<commons-lang3>3.3.2</commons-lang3>

		<hibernate.version>5.1.0.Final</hibernate.version>
		<hibernate.entitymanager.version>5.1.0.Final</hibernate.entitymanager.version>

		<vaadin.version>7.6.3</vaadin.version>

		<sl4j.version>1.7.12</sl4j.version>
		<log4j.version>1.2.17</log4j.version>

		<reflection.version>[0.1-DEV,)</reflection.version>
		<esapi.version>2.1.0</esapi.version>
		<cglib.version>3.2.1</cglib.version>

		<!-- used in case of a transient dependency problem and java8 -->
		<javassist.version>3.20.0-GA</javassist.version>
		<weatherapi.version>1.2.0</weatherapi.version>
		<openweathermap.version>2.5.0.3</openweathermap.version>
		<jtesseract.version>0.0.4</jtesseract.version>
		<proj4j.version>0.1.0</proj4j.version>
		<supercsv.version>2.4.0</supercsv.version>
		<jackson.version>2.7.0</jackson.version>
		<resteasy.version>3.0.17.Final</resteasy.version>

	</properties>
</project>